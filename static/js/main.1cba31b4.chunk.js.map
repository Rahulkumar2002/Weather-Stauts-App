{"version":3,"sources":["Component/WeatherCard.jsx","Component/Temp.jsx","App.js","index.js"],"names":["WeatherCard","tempInfo","React","useState","weatherState","setweatherState","temp","humidity","pressure","weatherMood","name","speed","country","sunset","useEffect","today","Date","date","getDate","getMonth","getFullYear","timeStr1","getHours","getMinutes","getSeconds","date2","timeStr","className","Temp","searchValue","setsearchValue","settempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","autoFocus","placeholder","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cba31b4.chunk.js","sourcesContent":["import React , {useEffect} from 'react'\r\nimport \"./style.css\"\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n    const [weatherState, setweatherState] = React.useState(\"\") ;\r\n    const {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weatherMood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n    } = tempInfo;\r\n\r\n    useEffect(() => {\r\n        if(weatherMood){\r\n            switch (weatherMood) {\r\n                case 'Clouds': setweatherState('wi-day-cloudy');\r\n                    break;\r\n                case 'Haze': setweatherState('wi-fog');\r\n                    break;\r\n                case 'Clear': setweatherState('wi-day-sunny');\r\n                    break;\r\n                case 'Mist': setweatherState('wi-dust');\r\n                    break;\r\n                case 'Rain': setweatherState('wi-day-rain');\r\n                    break;\r\n            \r\n                default:\r\n                    setweatherState('wi-day-sunny');\r\n                    break;\r\n            }\r\n        }\r\n    }, [weatherMood])\r\n\r\n    let today = new Date();\r\n    let date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\r\n    let timeStr1 = `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\r\n\r\n    let sec = sunset;\r\n    let date2 = new Date(sec * 1000);\r\n    let timeStr = `${date2.getHours()}:${date2.getMinutes()}`;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-lyt\">\r\n                <div className=\"icon-box\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"tandt\">\r\n                    <div className=\"temperature\">\r\n                        <h1>{temp}&#176;</h1>\r\n                        <div>\r\n                            <span className=\"mood\">\r\n                                {weatherMood}\r\n                            </span>\r\n                            <span className=\"city\">{name}, {country}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"time\">\r\n                        <h2>\r\n                            {date}\r\n                        <br/>\r\n                        {timeStr1}\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <i className=\"wi wi-sunset\"></i>\r\n                        <div>\r\n                            <span>{timeStr}PM</span>\r\n                            <span>Sunset</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <i className=\"wi wi-humidity\"></i>\r\n                        <div>\r\n                            <span>{humidity}</span>\r\n                            <span>Humidity</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <i className=\"wi wi-rain\"></i>\r\n                        <div>\r\n                            <span>{pressure}</span>\r\n                            <span>Pressure</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <i className=\"wi wi-strong-wind\"></i>\r\n                        <div>\r\n                            <span>{speed}</span>\r\n                            <span>Speed</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherCard\r\n\r\n","// https://api.openweathermap.org/data/2.5/weather?q=pune&appid=6d681232e6c9558262dcc43dd05a95af\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport WeatherCard from './WeatherCard';\r\nimport './style.css'\r\n\r\n\r\nfunction Temp() {\r\n    const [searchValue, setsearchValue] = useState(\"Delhi\")\r\n    const [tempInfo, settempInfo] = useState({})\r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=6d681232e6c9558262dcc43dd05a95af`\r\n            const res = await fetch(url)\r\n            const data = await res.json()\r\n\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weatherMood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys;\r\n\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weatherMood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n            }\r\n            settempInfo(myNewWeatherInfo)\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='temp-main'>\r\n\r\n            <div className=\"searchBox\">\r\n                <input type=\"search\" className=\"searchInput\" autoFocus\r\n                    placeholder=\"Check Your City Weather...\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setsearchValue(e.target.value)} />\r\n\r\n                <button className=\"btn\" onClick={getWeatherInfo}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n            <WeatherCard tempInfo = {tempInfo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n\r\n","import React from 'react'\nimport Temp from './Component/Temp'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Temp/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}